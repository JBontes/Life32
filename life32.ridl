// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 27-2-2016 4:47:20 (- $Rev: 12980 $, 104127453).

[
  uuid(74BEE5C0-5B2D-11D3-8F8B-0080C747848B), 
  version(1.0), 
  helpstring("Life32 Library")
    
]
library life32
{

  importlib("stdole32.tlb");

  interface ILifeApplication;
  coclass LifeApplication;
  interface ILifeWindow;
  coclass LifeWindow;
  interface ILifeUniverse;
  coclass LifeUniverse;
  interface ILifeSelection;
  coclass LifeSelection;
  interface ILifeToolbar;
  coclass LifeToolbar;
  interface ILifeStatusbar;
  coclass LifeStatusbar;
  interface ILifeWindows;
  coclass LifeWindows;
  interface ILifeScrapbook;
  coclass LifeScrapbook;
  interface ILifeScraplet;
  coclass LifeScraplet;
  interface ILifeSnapshots;
  coclass LifeSnapshots;
  interface ILifeSidepanel;
  coclass LifeSidepanel;
  interface ILifeSnapshot;
  coclass LifeSnapshot;
  interface ILifeColors;
  coclass LifeColors;


  [
    uuid(B0090F00-7137-11D3-AAE7-F3FFD6030C72), 
    version(1.0), 
    helpstring("\0?\0\0\b\0\0\0?<?\t?fE\t\x12fE\t?oE\tBfE\t2cE\t?lE\t?aE\t?")
  ]
  enum ePasteMode
  {
    [source, bindable]
    lpmOr = 2001, 
    [source, bindable]
    lpmPut = 2002, 
    [source, bindable]
    lpmXor = 2003, 
    [source, bindable]
    lpmError = 2004
  };

  [
    uuid(B0090F01-7137-11D3-AAE7-F3FFD6030C72), 
    version(1.0), 
    helpstring("\0\x05d\0i\0p\0l\0u\0s\0F\0o\0n\0t\0C\0a\0c\0h\0e\0F\0i\0l\0e\0V")
  ]
  enum eCursorMode
  {
    [readonly, source, bindable]
    emDraw = 2010, 
    [readonly, source, bindable]
    emSelect = 2011, 
    [readonly, source, bindable]
    emHand = 2013
  };

  [
    uuid(AF276580-2B5B-11D4-AAE7-E36940329A77), 
    version(1.0), 
    helpstring("\0\x04\0\0?\0??\0\0\0\x10I\0n\0n\0e\0r\0C\0o\0n\0t\0e\0n\0t\0A\0r\0e")
  ]
  enum eWindowState
  {
    [source, bindable, requestedit]
    ewsMaximized = 1, 
    [source, bindable, requestedit]
    ewsMinimized = 2, 
    [source, bindable, requestedit]
    ewsNormal = 3
  };

  [
    uuid(74BEE5C1-5B2D-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("Dispatch interface for TLife32App Object\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeApplication: IDispatch
  {
    [propget, id(0x00000015)]
    HRESULT _stdcall Sidepanel([out, retval] LifeSidepanel** Sidepanel);
    [propget, id(0x00000009)]
    HRESULT _stdcall Toolbar([out, retval] LifeToolbar** Toolbar);
    [propget, id(0x0000000B)]
    HRESULT _stdcall Statusbar([out, retval] LifeStatusbar** Statusbar);
    [propget, id(0x00000017)]
    HRESULT _stdcall Colors([out, retval] LifeColors** Colors);
    [propget, id(0x00000019)]
    HRESULT _stdcall Scrapbook([out, retval] LifeScrapbook** Scrapbook);
    [propget, id(0x00000018)]
    HRESULT _stdcall Windows([out, retval] LifeWindows** Windows);
    [propget, id(0x00000001)]
    HRESULT _stdcall ActiveWindow([out, retval] LifeWindow** ActiveWindow);
    [id(0x00000002)]
    HRESULT _stdcall Play([in] long step);
    [id(0x00000007)]
    HRESULT _stdcall SkipTo([in] long Generation);
    [id(0x00000003)]
    HRESULT _stdcall Pause(void);
    [id(0x00000004)]
    HRESULT _stdcall Close(void);
    [id(0x00000005)]
    HRESULT _stdcall RegisterKeyHandler([in] BSTR Name);
    [id(0x00000006)]
    HRESULT _stdcall UnregisterKeyhandler([in] BSTR Name);
    [propget, id(0x00000008)]
    HRESULT _stdcall PlaySpeed([out, retval] long* PlaySpeed);
    [propput, id(0x00000008)]
    HRESULT _stdcall PlaySpeed([in] long PlaySpeed);
    [propget, id(0x00000014)]
    HRESULT _stdcall Zoom([out, retval] long* Zoom);
    [propput, id(0x00000014)]
    HRESULT _stdcall Zoom([in] long Zoom);
    [propget, id(0x00000016)]
    HRESULT _stdcall FrameDropInterval([out, retval] long* FrameDropInterval);
    [propput, id(0x00000016)]
    HRESULT _stdcall FrameDropInterval([in] long FrameDropInterval);
    [propget, id(0x0000000A)]
    HRESULT _stdcall ShowScrollbar([out, retval] VARIANT_BOOL* ShowScrollbar);
    [propput, id(0x0000000A)]
    HRESULT _stdcall ShowScrollbar([in] VARIANT_BOOL ShowScrollbar);
    [propget, id(0x0000000E)]
    HRESULT _stdcall DirectXEnabled([out, retval] VARIANT_BOOL* DirectXEnabled);
    [propput, id(0x0000000E)]
    HRESULT _stdcall DirectXEnabled([in] VARIANT_BOOL DirectXEnabled);
    [propget, id(0x0000000C)]
    HRESULT _stdcall CursorMode([out, retval] enum eCursorMode* CursorMode);
    [propput, id(0x0000000C)]
    HRESULT _stdcall CursorMode([in] enum eCursorMode CursorMode);
    [propget, id(0x0000000D)]
    HRESULT _stdcall PasteMode([out, retval] enum ePasteMode* PasteMode);
    [propput, id(0x0000000D)]
    HRESULT _stdcall PasteMode([in] enum ePasteMode PasteMode);
    [propget, id(0x00000010)]
    HRESULT _stdcall WindowState([out, retval] enum eWindowState* WindowState);
    [propput, id(0x00000010)]
    HRESULT _stdcall WindowState([in] enum eWindowState WindowState);
    [id(0x00000011)]
    HRESULT _stdcall SetFocus(void);
    [id(0x00000012)]
    HRESULT _stdcall MessageBox([in] BSTR Message);
    [id(0x00000013)]
    HRESULT _stdcall Ask([in] BSTR Message, [out, retval] BSTR* Message2);
  };

  [
    uuid(BD736540-5B3F-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("\0\0\0\0\b\0\0\0?!?\t\"lE\t?gE\t2iE\t\x02nE\t?bE\t?jE\t?`E\t\x02"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeWindow: IDispatch
  {
    [propget, id(0x00000003)]
    HRESULT _stdcall Application([out, retval] LifeApplication** Application);
    [propget, id(0x00000002)]
    HRESULT _stdcall Universe([out, retval] LifeUniverse** Universe);
    [propget, id(0x0000000C)]
    HRESULT _stdcall Selection([out, retval] LifeSelection** Selection);
    [propget, id(0x00000011)]
    HRESULT _stdcall Snapshots([out, retval] LifeSnapshots** Snapshots);
    [propput, id(0x00000011)]
    HRESULT _stdcall Snapshots([in] LifeSnapshots* Snapshots);
    [propget, id(0x0000000F)]
    HRESULT _stdcall Caption([out, retval] BSTR* Caption);
    [propput, id(0x0000000F)]
    HRESULT _stdcall Caption([in] BSTR Caption);
    [propget, id(0x00000008)]
    HRESULT _stdcall Width([out, retval] long* Width);
    [propget, id(0x00000009)]
    HRESULT _stdcall Height([out, retval] long* Height);
    [id(0x00000004)]
    HRESULT _stdcall MoveTo([in] long x, [in] long y);
    [id(0x00000005)]
    HRESULT _stdcall MoveBy([in] long dx, [in] long dy);
    [id(0x00000006)]
    HRESULT _stdcall ZoomToFit(void);
    [id(0x0000000D)]
    HRESULT _stdcall ZoomToSelection(void);
    [id(0x00000001)]
    HRESULT _stdcall CenterOnPattern(void);
    [id(0x00000007)]
    HRESULT _stdcall SelectAll(void);
    [id(0x0000000A)]
    HRESULT _stdcall RandomDot(void);
    [id(0x0000000E)]
    HRESULT _stdcall Redraw(void);
  };

  [
    uuid(DA234E40-5BED-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("\0\x01\0\0\b\0\0\0(\x17?\x11\x1A?E\t??E\t\x1A?E\t??E\tz?E\t\x1A?E\t??E\t?"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeUniverse: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Generation([out, retval] long* Generation);
    [propget, id(0x00000002)]
    HRESULT _stdcall Rules([out, retval] BSTR* Rules);
    [propput, id(0x00000002)]
    HRESULT _stdcall Rules([in] BSTR Rules);
    [propget, id(0x0000000C)]
    HRESULT _stdcall Description([out, retval] BSTR* Description);
    [propput, id(0x0000000C)]
    HRESULT _stdcall Description([in] BSTR Description);
    [propget, id(0x00000007)]
    HRESULT _stdcall Width([out, retval] long* Width);
    [propget, id(0x00000008)]
    HRESULT _stdcall Height([out, retval] long* Height);
    [propget, id(0x00000009)]
    HRESULT _stdcall CellCount([out, retval] long* CellCount);
    [id(0x00000003)]
    HRESULT _stdcall SaveToFile([in] BSTR AFile);
    [id(0x00000004)]
    HRESULT _stdcall LoadFromFile([in] BSTR AFile);
    [id(0x00000005)]
    HRESULT _stdcall ChangeCell([in] long x, [in] long y, [in] VARIANT_BOOL State);
    [id(0x00000006)]
    HRESULT _stdcall CellState([in] long x, [in] long y, [out, retval] VARIANT_BOOL* State);
    [id(0x0000000A)]
    HRESULT _stdcall DrawLine([in] long x1, [in] long y1, [in] long x2, [in] long y2, [in] VARIANT_BOOL Fill);
    [id(0x0000000B)]
    HRESULT _stdcall Clone([out, retval] LifeUniverse** Clone);
  };

  [
    uuid(281E9FE0-CC97-11D3-AAE7-E20AA055AF17), 
    version(1.0), 
    helpstring("\0\x04\0\0?p\"\b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeSelection: IDispatch
  {
    [propget, id(0x00000016)]
    HRESULT _stdcall Universe([out, retval] LifeUniverse** Universe);
    [propget, id(0x00000001)]
    HRESULT _stdcall Left([out, retval] long* Left);
    [propput, id(0x00000001)]
    HRESULT _stdcall Left([in] long Left);
    [propget, id(0x00000002)]
    HRESULT _stdcall Top([out, retval] long* Top);
    [propput, id(0x00000002)]
    HRESULT _stdcall Top([in] long Top);
    [propget, id(0x00000003)]
    HRESULT _stdcall Right([out, retval] long* Right);
    [propput, id(0x00000003)]
    HRESULT _stdcall Right([in] long Right);
    [propget, id(0x00000004)]
    HRESULT _stdcall Bottom([out, retval] long* Bottom);
    [propput, id(0x00000004)]
    HRESULT _stdcall Bottom([in] long Bottom);
    [propget, id(0x0000000D)]
    HRESULT _stdcall CellCount([out, retval] long* CellCount);
    [propget, id(0x0000000F)]
    HRESULT _stdcall AsText([out, retval] BSTR* AsText);
    [propput, id(0x0000000F)]
    HRESULT _stdcall AsText([in] BSTR AsText);
    [id(0x00000005)]
    HRESULT _stdcall Cut(void);
    [id(0x00000006)]
    HRESULT _stdcall Copy(void);
    [id(0x00000007)]
    HRESULT _stdcall Paste(void);
    [id(0x00000008)]
    HRESULT _stdcall Clear(void);
    [id(0x00000010)]
    HRESULT _stdcall ClearOutsideSelection(void);
    [id(0x00000009)]
    HRESULT _stdcall Invert(void);
    [id(0x0000000A)]
    HRESULT _stdcall FillBlack(void);
    [id(0x0000000B)]
    HRESULT _stdcall FillRandom(void);
    [id(0x0000000C)]
    HRESULT _stdcall DrawBox(void);
    [id(0x00000011)]
    HRESULT _stdcall MirrorHorz(void);
    [id(0x00000012)]
    HRESULT _stdcall MirrorVert(void);
    [id(0x00000013)]
    HRESULT _stdcall Rotate90(void);
    [id(0x00000014)]
    HRESULT _stdcall Rotate180(void);
    [id(0x00000015)]
    HRESULT _stdcall Rotate270(void);
    [id(0x0000000E)]
    HRESULT _stdcall MoveBy([in] long dx, [in] long dy);
  };

  [
    uuid(9E508F00-CF96-11D3-AAE7-9B21CBD246E8), 
    version(1.0), 
    helpstring("\0\x04\0\0?\0??\0\0\0\x0Et\0a\0s\0k\0d\0i\0a\0l\0o\0g\0r\0o\0o\0t\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeToolbar: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Visible);
    [propput, id(0x00000001)]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Visible);
  };

  [
    uuid(9E508F03-CF96-11D3-AAE7-9B21CBD246E8), 
    version(1.0), 
    helpstring("\0\x05\0\0?\0??\0\0\0\x11I\0n\0n\0e\0r\0P\0r\0i\0m\0a\0r\0y\0P\0a\0n"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeStatusbar: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Visible);
    [propput, id(0x00000001)]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Visible);
  };

  [
    uuid(27D67020-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0?\0??\0\0\0\x10V\0e\0r\0i\0f\0i\0c\0a\0t\0i\0o\0n\0A\0r\0e"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeWindows: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Item([in] long index, [out, retval] LifeWindow** Result);
    [propput, id(0x00000001)]
    HRESULT _stdcall Item([in] long index, [in] LifeWindow* Result);
    [propget, id(0x00000002)]
    HRESULT _stdcall Count([out, retval] long* Count);
    [id(0x00000003)]
    HRESULT _stdcall Next([out, retval] LifeWindow** Next);
    [id(0x00000004)]
    HRESULT _stdcall Previous([out, retval] LifeWindow** Previous);
    [id(0x00000005)]
    HRESULT _stdcall New([out, retval] LifeWindow** New);
    [id(0x00000006)]
    HRESULT _stdcall Delete([in] long index);
  };

  [
    uuid(27D67022-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\00\x0F\0\x04\0\0\0\0\0\0\0\0?\x05\x04\0?%?w\0\0\0\0p?\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeScrapbook: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Item([in] long index, [out, retval] LifeScraplet** Result);
    [propput, id(0x00000001)]
    HRESULT _stdcall Item([in] long index, [in] LifeScraplet* Result);
    [propget, id(0x00000002)]
    HRESULT _stdcall Count([out, retval] long* Count);
    [propput, id(0x00000002)]
    HRESULT _stdcall Count([in] long Count);
    [id(0x00000003)]
    HRESULT _stdcall Next([out, retval] LifeScraplet** Next);
    [id(0x00000004)]
    HRESULT _stdcall Previous([out, retval] LifeScraplet** Previous);
    [id(0x00000005)]
    HRESULT _stdcall Insert([in] LifeUniverse* Universe, [out, retval] LifeScraplet** Result);
    [id(0x00000006)]
    HRESULT _stdcall Delete([in] long index);
  };

  [
    uuid(27D67024-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x04\0\0\0\0\0\0\0\0\0\0@\x0F\0\x04\0\0\0\0\0\0\0\0*\x06\t\0???q\0\0\0\0p?\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeScraplet: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Universe([out, retval] LifeUniverse** Universe);
    [propput, id(0x00000001)]
    HRESULT _stdcall Universe([in] LifeUniverse* Universe);
    [propget, id(0x00000002)]
    HRESULT _stdcall Caption([out, retval] BSTR* Caption);
    [propput, id(0x00000002)]
    HRESULT _stdcall Caption([in] BSTR Caption);
    [propget, id(0x00000003)]
    HRESULT _stdcall ShortcutKey([out, retval] BSTR* ShortcutKey);
    [propput, id(0x00000003)]
    HRESULT _stdcall ShortcutKey([in] BSTR ShortcutKey);
  };

  [
    uuid(27D67026-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0\f\x05\f\0?%?w\0\0\0\0p?\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeSnapshots: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Window([out, retval] LifeWindow** Window);
    [propget, id(0x00000003)]
    HRESULT _stdcall Item([in] long index, [out, retval] LifeSnapshot** Result);
    [propget, id(0x00000004)]
    HRESULT _stdcall Count([out, retval] long* Count);
    [id(0x00000005)]
    HRESULT _stdcall MakeSnapshot([in] long Cause);
    [id(0x00000006)]
    HRESULT _stdcall RevertToSnapshot([in] long index);
    [id(0x00000007)]
    HRESULT _stdcall SortBy([in] long SortKey, [in] VARIANT_BOOL Ascending);
    [id(0x00000008)]
    HRESULT _stdcall Delete([in] long index);
  };

  [
    uuid(27D67028-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0?\x03\f\0???q\0\0\0\0p?\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeSidepanel: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Visible);
    [propput, id(0x00000001)]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Visible);
    [propget, id(0x00000002)]
    HRESULT _stdcall Width([out, retval] long* Width);
    [propput, id(0x00000002)]
    HRESULT _stdcall Width([in] long Width);
    [propget, id(0x00000003)]
    HRESULT _stdcall PageIndex([out, retval] long* PageIndex);
    [propput, id(0x00000003)]
    HRESULT _stdcall PageIndex([in] long PageIndex);
  };

  [
    uuid(27D6702A-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0?\x04-\0?%?w\0\0\0\0p?\0\0\0"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeSnapshot: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall Cause([out, retval] long* Cause);
    [propput, id(0x00000001)]
    HRESULT _stdcall Cause([in] long Cause);
    [propget, id(0x00000002)]
    HRESULT _stdcall Generation([out, retval] long* Generation);
    [propput, id(0x00000002)]
    HRESULT _stdcall Generation([in] long Generation);
    [propget, id(0x00000003)]
    HRESULT _stdcall PatternNumber([out, retval] long* PatternNumber);
    [propput, id(0x00000003)]
    HRESULT _stdcall PatternNumber([in] long PatternNumber);
    [propget, id(0x00000004)]
    HRESULT _stdcall RevisionNumber([out, retval] long* RevisionNumber);
    [propput, id(0x00000004)]
    HRESULT _stdcall RevisionNumber([in] long RevisionNumber);
    [propget, id(0x00000005)]
    HRESULT _stdcall Filename([out, retval] long* Filename);
    [propput, id(0x00000005)]
    HRESULT _stdcall Filename([in] long Filename);
  };

  [
    uuid(FDD87140-1A4E-11D6-9C30-B09045C10000), 
    version(1.0), 
    helpstring("\0\x05m\0a\0g\0e\0A\0l\0i\0g\0n\0m\0e\0n\0t\0W\0r\0a\0p\0p\0e\0r"), 
    hidden, 
    dual, 
    oleautomation
  ]
  interface ILifeColors: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall ForeGround([out, retval] long* ForeGround);
    [propput, id(0x00000001)]
    HRESULT _stdcall ForeGround([in] long ForeGround);
    [propget, id(0x00000002)]
    HRESULT _stdcall BackGround([out, retval] long* BackGround);
    [propput, id(0x00000002)]
    HRESULT _stdcall BackGround([in] long BackGround);
    [propget, id(0x00000003)]
    HRESULT _stdcall NormalGrid([out, retval] long* NormalGrid);
    [propput, id(0x00000003)]
    HRESULT _stdcall NormalGrid([in] long NormalGrid);
    [propget, id(0x00000004)]
    HRESULT _stdcall BoldGrid([out, retval] long* BoldGrid);
    [propput, id(0x00000004)]
    HRESULT _stdcall BoldGrid([in] long BoldGrid);
    [propget, id(0x00000005)]
    HRESULT _stdcall SelectionRect([out, retval] long* SelectionRect);
    [propput, id(0x00000005)]
    HRESULT _stdcall SelectionRect([in] long SelectionRect);
    [propget, id(0x00000006)]
    HRESULT _stdcall ZoomRect([out, retval] long* ZoomRect);
    [propput, id(0x00000006)]
    HRESULT _stdcall ZoomRect([in] long ZoomRect);
    [propget, id(0x00000007)]
    HRESULT _stdcall OutsideTorus([out, retval] long* OutsideTorus);
    [propput, id(0x00000007)]
    HRESULT _stdcall OutsideTorus([in] long OutsideTorus);
    [propget, id(0x00000009)]
    HRESULT _stdcall DragCells([out, retval] long* DragCells);
    [propput, id(0x00000009)]
    HRESULT _stdcall DragCells([in] long DragCells);
  };

  [
    uuid(74BEE5C2-5B2D-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("TLife32AppObject\0?E\t??E\t?E\t??E\t??E\t*?E\tz")
  ]
  coclass LifeApplication
  {
    [default] interface ILifeApplication;
  };

  [
    uuid(BD736541-5B3F-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("\0\x03\0\0\b\0\0\0?\x1E?\t?aE\tr`E\t?nE\t?fE\t?fE\t2gE\t?cE\t?")
  ]
  coclass LifeWindow
  {
    [default] interface ILifeWindow;
  };

  [
    uuid(DA234E41-5BED-11D3-8F8B-0080C747848B), 
    version(1.0), 
    helpstring("\0\0\0\0\b\0\0\0?h?\x110%E\t?$E\t?&E\t?-E\t\x10(E\t\x10'E\t`#E\t?")
  ]
  coclass LifeUniverse
  {
    [default] interface ILifeUniverse;
  };

  [
    uuid(281E9FE1-CC97-11D3-AAE7-E20AA055AF17), 
    version(1.0), 
    helpstring("\0\x05?j\0\0\0\b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0")
  ]
  coclass LifeSelection
  {
    [default] interface ILifeSelection;
  };

  [
    uuid(9E508F01-CF96-11D3-AAE7-9B21CBD246E8), 
    version(1.0), 
    helpstring("\0\x05\0\0?\0??\0\0\0\x0ED\0i\0a\0l\0o\0g\0S\0c\0r\0o\0l\0l\0e\0r\0\0")
  ]
  coclass LifeToolbar
  {
    [default] interface ILifeToolbar;
  };

  [
    uuid(9E508F04-CF96-11D3-AAE7-9B21CBD246E8), 
    version(1.0), 
    helpstring("\0\x05\0\0?\0??\0\0\0\x0FC\0o\0n\0t\0e\0n\0t\0S\0c\0r\0o\0l\0l\0e\0r")
  ]
  coclass LifeStatusbar
  {
    [default] interface ILifeStatusbar;
  };

  [
    uuid(27D67021-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0?\0??\0\0\0\x0FC\0o\0m\0m\0a\0n\0d\0B\0u\0t\0t\0o\0n\0_\01")
  ]
  coclass LifeWindows
  {
    [default] interface ILifeWindows;
  };

  [
    uuid(27D67023-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0 \x0F\0\x04\0\0\0\0\0\0\0\0?\x06\r\0???q\0\0\0\0p?\0\0\0")
  ]
  coclass LifeScrapbook
  {
    [default] interface ILifeScrapbook;
  };

  [
    uuid(27D67025-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0p\x0F\0\x04\0\0\0\0\0\0\0\0?\x02\t\0?%?w\0\0\0\0p?\0\0\0")
  ]
  coclass LifeScraplet
  {
    [default] interface ILifeScraplet;
  };

  [
    uuid(27D67027-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0H\b(\0???q\0\0\0\0p?\0\0\0")
  ]
  coclass LifeSnapshots
  {
    [default] interface ILifeSnapshots;
  };

  [
    uuid(27D67029-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0t\x01\x11\0?%?w\0\0\0\0p?\0\0\0")
  ]
  coclass LifeSidepanel
  {
    [default] interface ILifeSidepanel;
  };

  [
    uuid(27D6702B-1683-11D6-9C30-80AA4AC1B44D), 
    version(1.0), 
    helpstring("\0\x05\0\0\0\0\0\0\0\0\0\0?\x0F\0\x04\0\0\0\0\0\0\0\0f\x04\n\0???q\0\0\0\0p?\0\0\0")
  ]
  coclass LifeSnapshot
  {
    [default] interface ILifeSnapshot;
  };

  [
    uuid(FDD87141-1A4E-11D6-9C30-B09045C10000), 
    version(1.0), 
    helpstring("\0\x04t\0o\0m\0(\0V\0e\0r\0i\0f\0i\0c\0a\0t\0i\0o\0n\0A\0r\0e\0a")
  ]
  coclass LifeColors
  {
    [default] interface ILifeColors;
  };

};